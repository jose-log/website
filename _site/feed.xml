<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-07-01T13:33:39-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Project Logs</title><subtitle>by Jose Logreira</subtitle><author><name>Jose Logreira</name></author><entry><title type="html">A Nixie Tube Clock Design</title><link href="http://localhost:4000/nuvitron/nixie_tube_clock" rel="alternate" type="text/html" title="A Nixie Tube Clock Design" /><published>2020-06-30T00:00:00-05:00</published><updated>2020-06-30T00:00:00-05:00</updated><id>http://localhost:4000/nuvitron/nixie_tube_clock</id><content type="html" xml:base="http://localhost:4000/nuvitron/nixie_tube_clock">&lt;p&gt;Digital clocks are fun electronic projects. Add some 160V &lt;a href=&quot;https://en.wikipedia.org/wiki/Nixie_tube&quot;&gt;nixie tubes&lt;/a&gt; and you get an extra layer of vintage art.&lt;/p&gt;

&lt;p&gt;I worked for &lt;strong&gt;&lt;a href=&quot;https://nuvitron.com&quot;&gt;Nuvitron&lt;/a&gt;&lt;/strong&gt; in the past, and I took part in the design and programming of their base circuit for the &lt;a href=&quot;https://nuvitron.com/the-vintage-electronics-shop&quot;&gt;Nixie Tube Clock lineup&lt;/a&gt;. They were kind enough to allow me to document most of the things. This post is just a summary. I created a &lt;a href=&quot;https://joselogreira.github.io/nixie_clock/&quot;&gt;GitHub Page&lt;/a&gt; for the project, and also all electronic design files are also in a &lt;a href=&quot;https://github.com/joselogreira/nixie_clock&quot;&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/HfNS7TEvCeo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;The clock uses the type &lt;a href=&quot;http://www.tube-tester.com/sites/nixie/data/in-12a.htm&quot;&gt;IN-12&lt;/a&gt; tubes. There’re plenty of them on ebay. This clock has had three major iterations, with the one described being the last one. To this date, the production-version hardware has not changed, although I’ve done some firmware code refactoring. Learning better C programming techniques over time made me realize that some of the code structure can still be improved, so it’s still open to changes.&lt;/p&gt;

&lt;p&gt;Some of the interesting things about this nixie clock implementation are described below&lt;/p&gt;

&lt;h2 id=&quot;small-pcb-footprint&quot;&gt;Small PCB footprint&lt;/h2&gt;

&lt;p&gt;Main PCB is only 12.5 x 4.5cms. The only missing components are the three user buttons and power connector, all located in a small secondary board in the back of the clock. PCB was designed using &lt;a href=&quot;https://kicad-pcb.org/&quot;&gt;KiCAD&lt;/a&gt;. Low voltage traces had a minimum separation of 8mils and high voltage traces, almost 24mils. Minimum footprints pitch is 0.5mm (the MCU pads). Most of the passive SMD components are 0603, all other components are bigger, so this allows the whole circuit to be hand-soldered with some practice and a regular chisel tip soldering iron.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/pcb_front.png&quot; alt=&quot;pcb front&quot; /&gt;
&lt;img src=&quot;/assets/img/pcb_back.png&quot; alt=&quot;pcb back&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s a double layer design, with most of the SMD components at the top, and only the RGB LEDs at the bottom to illuminate the tubes from their back to give nice background colours.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nc_leds.jpg&quot; alt=&quot;leds&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;no-external-rtc&quot;&gt;No external RTC&lt;/h2&gt;

&lt;p&gt;It is common to find independent &lt;a href=&quot;https://en.wikipedia.org/wiki/Real-time_clock&quot;&gt;Real Time Clock&lt;/a&gt; (RTC) chips to keep track of time. These chips have back-up battery so when external power is removed, the microcontroller shuts down but the RTC is still ON, with the advantage of consuming very little current (200mAh coin cell battery may last for a few years).&lt;/p&gt;

&lt;p&gt;This design uses the &lt;a href=&quot;http://ww1.microchip.com/downloads/en/DeviceDoc/40001908A.pdf&quot;&gt;ATmega324PB&lt;/a&gt; microcontroller. It’s optimized for low power consumption. It runs at 2MHz clock (relatively slow frequency), and can operate down to 1.8V supply voltage. In addition, it includes an internal RTC as peripheral, which is basically a timer operating asynchronously with an external 32.768Hz quartz crystal. These characteristics allow to discard an external RTC and use the different &lt;a href=&quot;https://joselogreira.github.io/nixie_clock/docs/sleep/&quot;&gt;sleep modes&lt;/a&gt; to keep track of time when there’s no external power (using a back-up battery, of course).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nc_mcu.jpg&quot; alt=&quot;leds&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;factory-and-user-testing&quot;&gt;Factory and user testing&lt;/h2&gt;

&lt;p&gt;A few batches of this circuit were produced. It was big enough to be willing to automate most of the testing, but small enought not to invest sophisticated hardware and software setups for testing. So, the in-between choice was to make use of some of the additional GPIO and memory of the MCU to desing a self-test mechanism: a way to measure system voltages, to estimate proper crystal frequencies and to easily test RGB LEDs and sounds.&lt;/p&gt;

&lt;p&gt;The circuit factory does not assemble the nixie tubes. That is a subsequent step during the clock assembly, so testing the tubes should also be part of the firmware, either for the clock assembler or the user.&lt;/p&gt;

&lt;p&gt;The factory self-test relies on the use of a USB-to-serial converter, to display test results on a PC virtual serial port terminal. It looks for three things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;System voltages:&lt;/strong&gt; Boost output voltage, input voltage, MCU voltage, boost controller voltage.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Crystals timing:&lt;/strong&gt; It uses the 16MHz ceramic resonator as a reference to measure the 32,768KHz quartz crystal precission.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;User feedback of LEDs and buzzer:&lt;/strong&gt; It switches between all LED colours and asks the operator whether they are correctly displayed. Then it plays some musical notes and asks whether they are properly heard.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The system isn’t fools’ proof, since it depends on operator feedback, but no doubt it’s better than doing no testing at all, or spending hundreds of dollars on specialized test equipment (remember, these were small production batches).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nc_testing.png&quot; alt=&quot;NC testing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Above is a screenshot of the voltages testing sequence, where all voltages are tested  three times, with the boost converter enabled and disabled. All test results are stored in internal EEPROM memory, so they can be later downloaded for further failure analysis or just tracking whether the circuits were properly tested or not.&lt;/p&gt;

&lt;p&gt;When the user or the clock assembler wants to test the nixie tubes and LEDs, a test sequence can be entered at start-up by pressing a button. It cycles through all the tubes’ digits and LED colors, so a visual inspection is straightforward. The image below shows the circuit performing that sequence.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nc_user_test.jpeg&quot; alt=&quot;NC user test&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;low-power-consumption&quot;&gt;Low power consumption&lt;/h2&gt;

&lt;p&gt;Nixie tubes require high voltage, but low power. Each tube’s digit consumes less than 2mA @ 160V. Besides, the &lt;a href=&quot;https://joselogreira.github.io/nixie_clock/docs/multiplexing/&quot;&gt;multiplexing&lt;/a&gt; scheme allows for only one tube to be active at a time. Apart from the tubes, the full-on RGB LEDs are the other big consumers of current. Lab measurements show a maximum current consumption of 70mA @ 12V input voltage. &lt;strong&gt;That is, 0.84W!&lt;/strong&gt;. That makes me think that it could run out of a small lead-acid battery or something similar!, but that in itself is just another project.&lt;/p&gt;</content><author><name>Jose Logreira</name></author><category term="sample" /><summary type="html">Digital clocks are fun electronic projects. Add some 160V nixie tubes and you get an extra layer of vintage art.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/circuit_front.jpeg" /><media:content medium="image" url="http://localhost:4000/circuit_front.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>